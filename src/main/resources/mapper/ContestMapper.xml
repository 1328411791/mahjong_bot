<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.liahnu.bot.mapper.ContestMapper">

    <resultMap id="BaseResultMap" type="org.liahnu.bot.model.domain.Contest">
            <id property="id" column="id" jdbcType="INTEGER"/>
            <result property="type" column="type" jdbcType="VARCHAR"/>
            <result property="createUserId" column="create_user_id" jdbcType="VARCHAR"/>
            <result property="createGroupId" column="create_group_id" jdbcType="VARCHAR"/>
            <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
            <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,type,create_user_id,
        create_group_id,create_time,update_time
    </sql>

    <select id="selectRecentContest" resultType="org.liahnu.bot.model.vo.contest.UserLastContestVO">
        select contest_id, user_id, end_point, elo_change, update_time as time
        from (select id, type, create_user_id, create_group_id
              from contest
              where create_user_id = #{userId}
                and status = 'END'
                and type = #{type}) as `contest`
           , contest_end
        where contest.id = contest_end.contest_id
          and contest_end.user_id = 1
        order by time desc
        limit #{limit};
    </select>
</mapper>
