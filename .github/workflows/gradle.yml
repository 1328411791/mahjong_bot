# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Build and Deploy Docker Image

on:
  push:
    branches:
      - main  # 当推送到 main 分支时触发
      - develop/ci #  当推送到 develop/ci 分支时触发

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    environment: production


    steps:
    - uses: actions/checkout@v4
    - uses: graalvm/setup-graalvm@v1
      name: Setup GraalVM
      with:
        java-version: '24'
        distribution: 'graalvm'
        github-token: ${{ secrets.GITHUB_TOKEN }}

    # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

      # 3️⃣ 缓存 Gradle 包
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts', '**/gradle.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        run: chmod +x ./gradlew
        shell: bash

      # 构建 Docker 镜像
      - name: Build Docker image
        run: ./gradlew dockerBuildImage
        env:
          VERSION: ${{ github.sha }}

      - name: Docker push image
        run: ./gradlew dockerPushImage
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
