name: Build and Deploy Docker Image

on:
  push:
    branches:
      - master  # 当推送到 main 分支时触发
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
      # 1️⃣ 检出代码
      - name: Checkout code
        uses: actions/checkout@v4
      # 2️⃣ 设置 JDK 17 环境
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      # 3️⃣ 缓存 Gradle 包
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts', '**/gradle.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        run: chmod +x ./gradlew
        shell: bash

      # 设置版本
      - name: Set version
        id: set-version
        run: |
          if [ -n "${{ github.ref_name }}" ] && [[ "${{ github.ref_type }}" == "tag" ]]; then
            echo "version=${{ github.ref_name }}" >> $GITHUB_OUTPUT
          else
            echo "version=${{ github.sha }}" >> $GITHUB_OUTPUT
          fi

      # 构建 Docker 镜像
      - name: Build Docker image
        run: ./gradlew dockerBuildImage
        env:
          VERSION: ${{ github.sha }}

      - name: Docker push image
        run: ./gradlew dockerPushImage
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
          VERSION: ${{ steps.set-version.outputs.version }}
  call-deployment-workflow:
    needs: build-deploy
    uses: ./.github/workflows/deployment.yml
    with:
      version: ${{ needs.build-deploy.outputs.version }}

